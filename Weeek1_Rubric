import numpy as np
import matplotlib.pyplot as plt 

######### ATTEMPT 1 #########
N = 100
xh = [i for i in range(N)]
x = [0 for i in range(N)] 
x[0] = 1
x[1] = 5
for i in range(2,N):
    x[i] = x[i-1] + x[i-2]

#print(x)
plt.plot(xh, x, marker = "o")
plt.title("Attempt 1")
plt.xlabel("Position")
plt.ylabel("Value")
plt.show()

######### ATTEMPT 2 #########
N = 100
x = [0 for i in range(N)] 
xh = [i for i in range(N)]
x[0] = 1
x[1] = 5
for i in range(2,N):
    if (i%2 == 0):
        x[i] = x[i-1] + x[i-2]
    if (i%2 != 0):
        if(i%4 ==1):
            x[i] = x[1]
        else:
            x[i] = x[0]
#print(x)
plt.plot(xh, x, marker = "o")
plt.title("Attempt 2")
plt.xlabel("Position")
plt.ylabel("Value")
plt.show()

######### ATTEMPT 3 #########
N = 50
x = [0 for i in range(N)] 
xh = [i for i in range(N)]
x[0] = 1
x[1] = 5
for i in range(2,N):
    x[i]= x[i-1] + x[i-2]
    for j in ([3,7,11,26,45]):
        x[0+j] = x[0]
    for k in ([5,14,27,44]):
        x[1+k] = x[1]
        
#print(x)

plt.plot(xh, x, marker = "o")
plt.title("Attempt 3")
plt.xlabel("Position")
plt.ylabel("Value")
plt.show()

######### CORRECT CODE #########
N = 65
x = [0 for i in range(N)]

a = 1
b = 5
x[0] = a
x[1] = b

for i in range(2,N):
    x[i] = x[i-1]+ x[i-2]
    if(x[i]>=10):
        x[i]=x[i]- 10
    if((x[i]==b) and (x[i-1] ==a)):
        break

while(x[len(x)-1] == 0):
    x.pop();

#print(x)
print("The length of the sequence is", len(x))

#find index of values in x which are either 1 or 5
array_1 = [i for i, x in enumerate(x) if x == a]
l1 = len(array_1)

array_2 = [i for i, x in enumerate(x) if x == b]
l2 = len(array_2)

#define x axis, the position in the sequence
xh = [i for i in range(len(x))]

plt.plot(xh, x,marker='o')
for a,b in zip(xh, x): 
    plt.text(a, b, str(b))
plt.plot(array_1, [x[0] for i in range(l1)], color = "yellow", marker = 'o', ls=' ')
plt.plot(array_2, [x[1] for i in range(l2)], color = "red", marker = 'o', ls=' ')
plt.title("Attempt 4")
plt.xlabel("Position")
plt.ylabel("Value")
plt.show() 

######### REVERSE SEQUENCE (1) #########
N = 65
x = [0 for i in range(N)]
y = [0 for i in range(N)]

a = 4
b = 7
x[0] = a
x[1] = b
y[0] = b
y[1] = a
for i in range(2,N):
    x[i] = x[i-1]+ x[i-2]
    if(x[i]>=10):
        x[i]=x[i]- 10
    if((x[i]==b) and (x[i-1] ==a)):
        break

while(x[len(x)-1] == 0):
    x.pop();
    
for i in range(2,N):
    y[i] = y[i-1]+ y[i-2]
    if(y[i]>=10):
        y[i]=y[i]- 10
    if((y[i]==a) and (y[i-1] ==b)):
        break

while(y[len(y)-1] == 0):
    y.pop();

#print(x)
print("The length of the sequence is", len(x))
print("The length of the inverse sequence is", len(y))

#find index of values in x which are either 4 or 7
array_1 = [i for i, x in enumerate(x) if x == a]
l1 = len(array_1)

array_2 = [i for i, x in enumerate(x) if x == b]
l2 = len(array_2)

#find index of values in x which are either 4 or 7
array_3 = [i for i, y in enumerate(y) if y == b]
l3 = len(array_3)

array_4 = [i for i, y in enumerate(y) if y == a]
l4 = len(array_4)

#define x axis, the position in the sequence
xh = [i for i in range(len(x))]

yh = [i for i in range(len(y))]

#plot two graphs with the inverse sequences
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(10,5))
ax1.plot(xh, x, marker = 'o')
for a,b in zip(xh, x): 
    ax1.text(a, b, str(b))
ax1.plot(array_1, [x[0] for i in range(l1)], color = "yellow", marker = 'o', ls=' ')
ax1.plot(array_2, [x[1] for i in range(l2)], color = "red", marker = 'o', ls=' ')

ax2.plot(yh, y, marker = 'o')
for a,b in zip(yh, y): 
    ax2.text(a, b, str(b))
ax2.plot(array_3, [y[0] for i in range(l3)], color = "yellow", marker = 'o', ls=' ')
plt.plot(array_4, [y[1] for i in range(l4)], color = "red", marker = 'o', ls=' ')

ax1.set_title('Sequence from (4,7)')
ax2.set_title('Sequence from (7,4)')
plt.tight_layout()
plt.show()


######### REVERSE SEQUENCE (2) #########
N = 65
x = [0 for i in range(N)]
y = [0 for i in range(N)]

a = 2
b = 6
x[0] = a
x[1] = b
y[0] = b
y[1] = a
for i in range(2,N):
    x[i] = x[i-1]+ x[i-2]
    if(x[i]>=10):
        x[i]=x[i]- 10
    if((x[i]==b) and (x[i-1] ==a)):
        break

while(x[len(x)-1] == 0):
    x.pop();
    
for i in range(2,N):
    y[i] = y[i-1]+ y[i-2]
    if(y[i]>=10):
        y[i]=y[i]- 10
    if((y[i]==a) and (y[i-1] ==b)):
        break

while(y[len(y)-1] == 0):
    y.pop();

#print(x)
print("The length of the sequence is", len(x))
print("The length of the inverse sequence is", len(y))

#find index of values in x which are either 2 or 6
array_1 = [i for i, x in enumerate(x) if x == a]
l1 = len(array_1)

array_2 = [i for i, x in enumerate(x) if x == b]
l2 = len(array_2)

#find index of values in x which are either 2 or 6
array_3 = [i for i, y in enumerate(y) if y == b]
l3 = len(array_3)

array_4 = [i for i, y in enumerate(y) if y == a]
l4 = len(array_4)

#define x axis, the position in the sequence
xh = [i for i in range(len(x))]

yh = [i for i in range(len(y))]

#plot two graphs with the inverse sequences
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(10,5))
ax1.plot(xh, x, marker = 'o')
for a,b in zip(xh, x): 
    ax1.text(a, b, str(b))
ax1.plot(array_1, [x[0] for i in range(l1)], color = "yellow", marker = 'o', ls=' ')
ax1.plot(array_2, [x[1] for i in range(l2)], color = "red", marker = 'o', ls=' ')

ax2.plot(yh, y, marker = 'o')
for a,b in zip(yh, y): 
    ax2.text(a, b, str(b))
ax2.plot(array_3, [y[0] for i in range(l3)], color = "yellow", marker = 'o', ls=' ')
plt.plot(array_4, [y[1] for i in range(l4)], color = "red", marker = 'o', ls=' ')

ax1.set_title('Sequence from (2,6)')
ax2.set_title('Sequence from (6,2)')
plt.tight_layout()
plt.show()
